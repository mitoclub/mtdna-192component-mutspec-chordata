ylab('Количество')+
ggtitle('Распределение индекса иммунореактивности среди пациентов')
ggplot(data = NM_plot_data, aes(NM_Index))+
geom_histogram(fill='yellowgreen', col='black', bins = 30)+
geom_vline(xintercept = c(11.52,13.14), col = 'red')+
geom_density(aes(y = ..count.. * 2.7), col='black')+
theme_bw()+
xlab('Значение индекса иммунореактивности')+
ylab('Количество')+
ggtitle('Распределение индекса иммунореактивности среди пациентов')
ggplot(data = NM_plot_data, aes(NM_Index))+
geom_histogram(fill='yellowgreen', col='black', bins = 30)+
geom_vline(xintercept = c(11.52,13.14), col = 'red')+
geom_density(aes(y = ..count.. * 2.6), col='black')+
theme_bw()+
xlab('Значение индекса иммунореактивности')+
ylab('Количество')+
ggtitle('Распределение индекса иммунореактивности среди пациентов')
ggplot(data = NM_plot_data, aes(NM_Index))+
geom_histogram(fill='darkgreen', col='black', bins = 30)+
geom_vline(xintercept = c(11.52,13.14), col = 'red')+
geom_density(aes(y = ..count.. * 2.6), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
data_patients$Allergy_Index = (data_patients$Lymphocyte_Abs + data_patients$Eosinophil_Abs) /
(data_patients$Monocyte_Abs + data_patients$Basophil_Abs + data_patients$Neitrophil_Abs)
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. * 2.6), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
Allergy_plot_data = data_patients[!is.na(data_patients$Allergy_Index),]
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. * 2.6), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count..), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 2), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 10), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 8), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 10), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='green', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='darkslategrey', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='darkslategrey3', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna2', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna3', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'red')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'green')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'darkgreen')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'blue')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'black')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'green4')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'green3')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индексасоотношения нейтрофилов к моноцитам')+
ylab('Количество')+
ggtitle('Распределение индекса соотношения нейтрофилов к моноцитам')
knitr::opts_chunk$set(echo = TRUE)
```{r echo=FALSE, message=FALSE}
```{r echo=FALSE, message=FALSE}
rm(list=ls(all=TRUE))
library(xlsx)
library(ggplot2)
setwd("~/mtdna-192component-mutspec-chordata/scripts")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
library(xlsx)
library(ggplot2)
data_patients = read.xlsx('Архив.xlsx', sheetIndex = 1)
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_bar()
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
library(xlsx)
library(ggplot2)
data_patients = read.xlsx('Архив.xlsx', sheetIndex = 1)
data_patients = data_patients[1:447,]
data_patients$BMI = data_patients$Вес / (data_patients$Рост / 100)**2
reveal_BMI_result = function(x)
{
if (x <= 18.5) {
return('Недовес')
} else if (18.5 < x & x < 24.9) {
return('Норма')
} else if (25.0 < x & x < 29.9) {
return('Полнота')
} else {
return('Ожирение')
}
}
data_patients = data_patients[!is.na(data_patients$BMI),]
data_patients$BMI_n = apply(as.matrix(data_patients$BMI), 1, FUN = reveal_BMI_result)
data_patients$Lymphocyte_Abs = data_patients$Лимфоциты / 100 * data_patients$Лейкоциты
data_patients$Monocyte_Abs = data_patients$Моноциты / 100 * data_patients$Лейкоциты
data_patients$Eosinophil_Abs = data_patients$Эозинофилы / 100 * data_patients$Лейкоциты
data_patients$Basophil_Abs = data_patients$Базофилы / 100 * data_patients$Лейкоциты
data_patients$Neitrophil_Abs = data_patients$Нейтрофилы / 100 * data_patients$Лейкоциты
data_patients$NL_Index = round(data_patients$Neitrophil_Abs / data_patients$Lymphocyte_Abs, 2)
data_patients$IIR_Index = round((data_patients$Lymphocyte_Abs + data_patients$Eosinophil_Abs) / data_patients$Monocyte_Abs, 2)
data_patients$NM_Index = round(data_patients$Neitrophil_Abs / data_patients$Monocyte_Abs, 2)
data_patients$Allergy_Index =
round((data_patients$Lymphocyte_Abs + data_patients$Eosinophil_Abs) /
(data_patients$Monocyte_Abs + data_patients$Basophil_Abs + data_patients$Neitrophil_Abs), 2)
NL_plot_data = data_patients[!is.na(data_patients$NL_Index),]
ggplot(data = NL_plot_data[NL_plot_data$NL_Index<=5,], aes(NL_Index))+
geom_histogram(fill='#69b3a2', col='black')+
geom_vline(xintercept = c(1.7,1.9), col = 'red')+
geom_density(aes(y = ..count.. / 5.5), col='black')+
theme_bw()+
xlab('Значение нейтрофильно-лимфоцитарного индекса')+
ylab('Количество')
IIR_plot_data = data_patients[!is.na(data_patients$IIR_Index),]
ggplot(data = IIR_plot_data, aes(IIR_Index))+
geom_histogram(fill='yellowgreen', col='black', bins = 30)+
geom_vline(xintercept = c(18.1,37.4), col = 'red')+
geom_density(aes(y = ..count.. * 1.5), col='black')+
theme_bw()+
xlab('Значение индекса иммунореактивности')+
ylab('Количество')
NM_plot_data = data_patients[!is.na(data_patients$NM_Index),]
ggplot(data = NM_plot_data, aes(NM_Index))+
geom_histogram(fill='darkgreen', col='black', bins = 30)+
geom_vline(xintercept = c(11.52,13.14), col = 'red')+
geom_density(aes(y = ..count.. * 2.6), col='black')+
theme_bw()+
xlab('Значение индекса соотношения нейтрофилов к моноцитам')+
ylab('Количество')
Allergy_plot_data = data_patients[!is.na(data_patients$Allergy_Index),]
ggplot(data = Allergy_plot_data, aes(Allergy_Index))+
geom_histogram(fill='sienna1', col='black', bins = 30)+
geom_vline(xintercept = c(0.79,1.08), col = 'green3')+
geom_density(aes(y = ..count.. / 6.5), col='black')+
theme_bw()+
xlab('Значение индекса аллергизации')+
ylab('Количество')
BMI_plot_data =  data_patients[!is.na(data_patients$BMI),]
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_bar()
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram()
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 40)
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50)
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')+
geom_density(aes(y=(..count..)))
geom_density(aes(y=(..count..)), col='black)
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')+
BMI_plot_data =  data_patients[!is.na(data_patients$BMI),]
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')+
geom_density(aes(y=(..count..)), col='black')
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')+
geom_density(aes(y=(..count..)), col='black'. alpha=1)
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')+
geom_density(aes(y=(..count..)), col='black', alpha=1)
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')+
geom_density()
ggplot(data=BMI_plot_data, aes(x=BMI, fill=BMI_n))+
geom_histogram(bins = 50, col='black')
rm(list=ls(all=TRUE))
sperm1 = read.xlsx('~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/1к.xlsx')
sperm1 = read.xlsx('~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/1к.xlsx'. sheetIndex = 1)
sperm1 = read.xlsx('~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/1к.xlsx', sheetIndex = 1)
View(sperm1)
sperm1 = read.xlsx('~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/1к.xlsx',
sheetIndex = 1, startRow = 4)
sperm1 = read.xlsx('~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/1к.xlsx',
sheetIndex = 1, startRow = 6)
summary(sperm1)
apply(sperm1, 2, sd)
apply(sperm1[,2:], 2, sd)
apply(sperm1[,-c(1)], 2, sd)
apply(sperm1[,-c(1,2)], 2, sd)
# Coefficient of variation = sd/mean
cof_of_var = function(x){
return (sd(x)/mean(x))
}
apply(sperm1[,-c(1,2)], 2, cof_of_var)
max(apply(sperm1[,-c(1,2)], 2, cof_of_var))
lapply(sperm1[,-c(1,2)], 2, cof_of_var)
type(apply(sperm1[,-c(1,2)], 2, cof_of_var))
dtype(apply(sperm1[,-c(1,2)], 2, cof_of_var))
typeof(apply(sperm1[,-c(1,2)], 2, cof_of_var))
typeof(list(apply(sperm1[,-c(1,2)], 2, cof_of_var)))
list(apply(sperm1[,-c(1,2)], 2, cof_of_var))
max(list(apply(sperm1[,-c(1,2)], 2, cof_of_var)))
a[max(a)]
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a[max(a)]
a[max(a)][[1]]
a[max(a)][1]
a[max(a)][1][1]
a[max(a)][[0]]
name(a[max(a)])
a[max(a)]
a[max(a)].__C__.name
a[max(a)].__C__.name()
typeof(a[max(a)])
list(apply(sperm1[,-c(1,2)], 2, cof_of_var))
list(apply(sperm1[,-c(1,2)], 2, cof_of_var))[[1]]
list(apply(sperm1[,-c(1,2)], 2, cof_of_var))[[1]][1]
apply(sperm1[,-c(1,2)], 2, cof_of_var))
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a[max(a)]
max(a)
max(a)
typeof(max(a))
a
a[1]
a[1][1]
a[1][[1]]
a[1][[0]]
a[1]...names()
name(a[1])
columns(a[1])
as.data.frame(a)
a = as.data.frame(a)
a = as.data.frame(a).t
a = as.data.frame(a).t()
a = transform(as.data.frame(a))
View(a)
a = transform(as.data.frame(a))
View(a)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = transform(as.data.frame(a))
View(a)
a = t(as.data.frame(a))
View(a)
max(a)
a = t(as.data.frame(a))
max(a)
a$typpe = index(a)
a$typpe = row.names(a)
View(a)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = t(as.data.frame(a))
View(a)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = as.data.frame(a)
View(a)
row.names(a)
a$typpe = row.names(a)
max(a)
which.max(a)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = apply(sperm1[,-c(1,2)], 2, cof_of_var)
a = as.data.frame(a)
which.max(a)
a = as.data.frame(a)
which.max(a)
View(a)
a[which.max(a$a),]
library(tidyverse)
install.packages("tidyverse")
library(tidyverse)
a %>% slice_max(a)
a %>% slice_max(a)[1]
a %>% slice_max(a)
b = a %>% slice_max(a)
b[1]
b[[1]]
row.names(b)
a[a$a == max(a$a),]
b = a %>% slice_max(a) %>% row.names()
list.files(pattern = '*.xlsx')
list.files(path='',pattern = '*.xlsx')
list.files(path='~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/',pattern = '*.xlsx')
available_environment = list.files(path=
'~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/',
pattern = '*.xlsx')
getwd()
available_environment[1]
available_environment[2]
available_environment[3]
lenght(available_environment[3])
lenght(list(available_environment[3]))
(available_environment[3])
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
path_to_data = '~/fish-strong-purifying-selection/
data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
print(file_env, max_val)
rm(list=ls(all=TRUE))
library(xlsx)
library(tidyverse)
# Coefficient of variation = sd/mean
cof_of_var = function(x)
{
return (sd(x)/mean(x))
}
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
max_val = cov_cols %>% slice_max(cov_cols) %>% row.names()
print(file_env, max_val)
}
View(cov_cols)
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
names(cov_cols) = 'res'
max_val = cov_cols %>% slice_max(res) %>% row.names()
print(file_env, max_val)
}
print(file_env)
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
names(cov_cols) = 'res'
max_val = cov_cols %>% slice_max(res) %>% row.names()
print(file_env)
}
dep_val_sperm = data.frame()
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
names(cov_cols) = 'res'
max_val = cov_cols %>% slice_max(res) %>% row.names()
dep_val_sperm = rbind(dep_val_sperm, c(file_env, max_val))
print(file_env)
}
View(dep_val_sperm)
dd = read.table('~/Downloads/functional_variant_tRNA_anticodon_table.tsv')
View(dd)
dd = read.table('~/Downloads/functional_variant_tRNA_anticodon_table.tsv', header=TRUE)
View(dd)
library(dyplr)
library(dplyr)
sdf = dd %>% mutate(fp = Consequence == 'synonymous_variant')
View(sdf)
variant_causes_Wobble_to_WCF <-  (grepl("\\*",sdf$Variant.tRNA) & grepl("near",sdf$Reference.tRNA)) & sdf$fp
(grepl("\\*",sdf$Variant.tRNA)
)
grepl("\\*",sdf$Variant.tRNA)
sdf = sdf %>%  mutate(variant_causes_Wobble_to_WCF <-  (grepl("\\*",sdf$Variant.tRNA) & grepl("near",sdf$Reference.tRNA)) & sdf$fp)
sdf = sdf %>%  mutate(variant_causes_Wobble_to_WCF =  (grepl("\\*",sdf$Variant.tRNA) & grepl("near",sdf$Reference.tRNA)) & sdf$fp)
