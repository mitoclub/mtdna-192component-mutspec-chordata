b[1]
b[[1]]
row.names(b)
a[a$a == max(a$a),]
b = a %>% slice_max(a) %>% row.names()
list.files(pattern = '*.xlsx')
list.files(path='',pattern = '*.xlsx')
list.files(path='~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/',pattern = '*.xlsx')
available_environment = list.files(path=
'~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/',
pattern = '*.xlsx')
getwd()
available_environment[1]
available_environment[2]
available_environment[3]
lenght(available_environment[3])
lenght(list(available_environment[3]))
(available_environment[3])
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
path_to_data = '~/fish-strong-purifying-selection/
data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
print(file_env, max_val)
rm(list=ls(all=TRUE))
library(xlsx)
library(tidyverse)
# Coefficient of variation = sd/mean
cof_of_var = function(x)
{
return (sd(x)/mean(x))
}
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
max_val = cov_cols %>% slice_max(cov_cols) %>% row.names()
print(file_env, max_val)
}
View(cov_cols)
path_to_data = '~/fish-strong-purifying-selection/data/SpermAnalysis/опыт 30.06.2023/'
available_environment = list.files(path=path_to_data,
pattern = '*.xlsx')
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
names(cov_cols) = 'res'
max_val = cov_cols %>% slice_max(res) %>% row.names()
print(file_env, max_val)
}
print(file_env)
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
names(cov_cols) = 'res'
max_val = cov_cols %>% slice_max(res) %>% row.names()
print(file_env)
}
dep_val_sperm = data.frame()
for (file_env in available_environment)
{
xlsx_path = paste(path_to_data, file_env, sep='/')
sperm_table_envX = read.xlsx(xlsx_path, sheetIndex = 1, startRow = 6)
cov_cols = as.data.frame(apply(sperm_table_envX[,-c(1,2)], 2, cof_of_var))
names(cov_cols) = 'res'
max_val = cov_cols %>% slice_max(res) %>% row.names()
dep_val_sperm = rbind(dep_val_sperm, c(file_env, max_val))
print(file_env)
}
View(dep_val_sperm)
dd = read.table('~/Downloads/functional_variant_tRNA_anticodon_table.tsv')
View(dd)
dd = read.table('~/Downloads/functional_variant_tRNA_anticodon_table.tsv', header=TRUE)
View(dd)
library(dyplr)
library(dplyr)
sdf = dd %>% mutate(fp = Consequence == 'synonymous_variant')
View(sdf)
variant_causes_Wobble_to_WCF <-  (grepl("\\*",sdf$Variant.tRNA) & grepl("near",sdf$Reference.tRNA)) & sdf$fp
(grepl("\\*",sdf$Variant.tRNA)
)
grepl("\\*",sdf$Variant.tRNA)
sdf = sdf %>%  mutate(variant_causes_Wobble_to_WCF <-  (grepl("\\*",sdf$Variant.tRNA) & grepl("near",sdf$Reference.tRNA)) & sdf$fp)
sdf = sdf %>%  mutate(variant_causes_Wobble_to_WCF =  (grepl("\\*",sdf$Variant.tRNA) & grepl("near",sdf$Reference.tRNA)) & sdf$fp)
knitr::opts_chunk$set(echo = TRUE)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / content["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / content["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / content["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / content["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / content["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / content["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / content["t"]
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
content
sum(content)
temp = data.frame(fraction = c("A", "T", "G", "C"), v = c(content["a"]/sum(content), content["t"]/sum(content)), content["g"]/sum(content), content["c"]/sum(content))
View(temp)
temp = data.frame(fraction = c("A", "T", "G", "C"), v = c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
content["a"]/sum(content)
content["a"]/sum(content)
content["t"]/sum(content)
ontent["g"]/sum(content)
content["g"]/sum(content)
v = c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content)
v = c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
v = c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
v
temp = data.frame(c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
temp
c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content)
temp = data.frame(c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content)))
c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
data.frame(c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content)))
temp = data.frame(c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content)))
t=t(temp)
View(t)
temp = c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
temp =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
temp =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / temp["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / temp["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / temp["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / temp["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / temp["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / temp["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / temp["t"]
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
sum(aggsum$NormFreq)
aggsum
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
sum(aggsum$NormFreq)fraccontent
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
sum(aggsum$NormFreq)
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
aggsum
content["a"]/sum(content)
content["g"]/sum(content)
content["c"]/sum(content)
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
View(aggsum)
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
10^-5
aggsum$Freq = aggsum$Freq*10^-5
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
fraccontent
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum$NormFreq = aggsum$NormFreq * 10^5
aggsum
aggsum$NormFreq = aggsum$NormFreq/ 10^5
aggsum$NormFreq = aggsum$NormFreq/ 10^5
aggsum
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum$NormFreq = aggsum$NormFreq
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
aggsum
aggsum$NormFreq = aggsum$NormFreq/100
aggsum
aggsum$NormFreq = aggsum$NormFreq/1000
aggsum
aggsum$NormFreq = aggsum$NormFreq/100
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum$NormFreq = aggsum$NormFreq/1000
aggsum
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
sum(aggsum$NormFreq)
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
aggsum[aggsum$SubType == "A_G",]$HeavySybType = "T_C"
aggsum[aggsum$SubType == "A_C",]$HeavySybType = "T_G"
aggsum[aggsum$SubType == "C_T",]$HeavySybType = "G_A"
aggsum[aggsum$SubType == "G_A",]$HeavySybType = "C_T"
aggsum[aggsum$SubType == "G_T",]$HeavySybType = "C_A"
aggsum[aggsum$SubType == "T_C",]$HeavySybType = "A_G"
aggsum[aggsum$SubType == "T_G",]$HeavySybType = "A_C"
knitr::opts_chunk$set(echo = TRUE)
rm(list=ls(all=TRUE))
if (!require(ggpubr)) install.packages("ggpubr")
if (!require(dplyr)) install.packages("dplyr")
if (!require(tidyr)) install.packages("tidyr")
if (!require(seqinr)) install.packages('seqinr')
library(tidyr)
library(seqinr)
library(ggpubr)
library(dplyr)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum$NormFreq = aggsum$NormFreq/1000
aggsum[aggsum$SubType == "A_G",]$HeavySubType = "T_C"
aggsum[aggsum$SubType == "A_C",]$HeavySubType = "T_G"
aggsum[aggsum$SubType == "C_T",]$HeavySubType = "G_A"
aggsum[aggsum$SubType == "G_A",]$HeavySubType = "C_T"
aggsum[aggsum$SubType == "G_T",]$HeavySubType = "C_A"
aggsum[aggsum$SubType == "T_C",]$HeavySubType = "A_G"
aggsum[aggsum$SubType == "T_G",]$HeavySubType = "A_C"
ggbarplot(aggsum, x = "SubType.lightChain", y = "NormFreq")
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType.lightChain", "Freq")
aggsum$NormFreq = 0
View(aggsum)
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum$NormFreq = aggsum$NormFreq/1000
aggsum[aggsum$SubType == "A_G",]$HeavySubType = "T_C"
aggsum[aggsum$SubType == "A_C",]$HeavySubType = "T_G"
aggsum[aggsum$SubType == "C_T",]$HeavySubType = "G_A"
aggsum[aggsum$SubType == "G_A",]$HeavySubType = "C_T"
aggsum[aggsum$SubType == "G_T",]$HeavySubType = "C_A"
aggsum[aggsum$SubType == "T_C",]$HeavySubType = "A_G"
aggsum[aggsum$SubType == "T_G",]$HeavySubType = "A_C"
aggsum$HeavySubType = 0
aggsum[aggsum$SubType == "A_G",]$HeavySubType = "T_C"
aggsum[aggsum$SubType == "A_C",]$HeavySubType = "T_G"
aggsum[aggsum$SubType == "C_T",]$HeavySubType = "G_A"
aggsum[aggsum$SubType == "G_A",]$HeavySubType = "C_T"
aggsum[aggsum$SubType == "G_T",]$HeavySubType = "C_A"
aggsum[aggsum$SubType == "T_C",]$HeavySubType = "A_G"
aggsum[aggsum$SubType == "T_G",]$HeavySubType = "A_C"
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq")
HSmitogenomeL = read.fasta(file = "../data/polg/HSmito.fasta", seqtype = "DNA")
mutspec = read.table("../data/polg/PolGspectrum.txt")
fragL = getFrag(HSmitogenomeL, 10030, 10130)
content = table(fragL)
fraccontent =c(content["a"]/sum(content), content["t"]/sum(content), content["g"]/sum(content), content["c"]/sum(content))
aggsum = aggregate(mutspec$V2, by=list(mutspec$V1), FUN = sum)
names(aggsum) = c("SubType", "Freq")
aggsum$NormFreq = 0
aggsum[aggsum$SubType == "A_G",]$NormFreq = aggsum[aggsum$SubType == "A_G",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "A_C",]$NormFreq = aggsum[aggsum$SubType == "A_C",]$Freq / fraccontent["a"]
aggsum[aggsum$SubType == "C_T",]$NormFreq = aggsum[aggsum$SubType == "C_T",]$Freq / fraccontent["c"]
aggsum[aggsum$SubType == "G_A",]$NormFreq = aggsum[aggsum$SubType == "G_A",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "G_T",]$NormFreq = aggsum[aggsum$SubType == "G_T",]$Freq / fraccontent["g"]
aggsum[aggsum$SubType == "T_C",]$NormFreq = aggsum[aggsum$SubType == "T_C",]$Freq / fraccontent["t"]
aggsum[aggsum$SubType == "T_G",]$NormFreq = aggsum[aggsum$SubType == "T_G",]$Freq / fraccontent["t"]
aggsum$NormFreq = aggsum$NormFreq/1000
aggsum$HeavySubType = 0
aggsum[aggsum$SubType == "A_G",]$HeavySubType = "T_C"
aggsum[aggsum$SubType == "A_C",]$HeavySubType = "T_G"
aggsum[aggsum$SubType == "C_T",]$HeavySubType = "G_A"
aggsum[aggsum$SubType == "G_A",]$HeavySubType = "C_T"
aggsum[aggsum$SubType == "G_T",]$HeavySubType = "C_A"
aggsum[aggsum$SubType == "T_C",]$HeavySubType = "A_G"
aggsum[aggsum$SubType == "T_G",]$HeavySubType = "A_C"
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "Pol G spectrum on heavy chain", ylab = "Frequencies")
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "Pol G spectrum on heavy chain", ylab = "Frequencies", legend = F)
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "Pol G spectrum on heavy chain", ylab = "Frequencies", legend = none)
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "Pol G spectrum on heavy chain", ylab = "Frequencies", legend = NULL)
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "PolG spectrum on heavy chain", ylab = "Frequencies")
fill = "HeavySubType",
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "PolG spectrum on heavy chain", ylab = "Frequencies")
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "PolG spectrum on а heavy chain", ylab = "Frequencies")
pdf("../fugures/PolG_spectrum_on_а_heavy_chain.pdf")
pdf("../figures/PolG_spectrum_on_а_heavy_chain.pdf")
pdf("../pictures/PolG_spectrum_on_а_heavy_chain.pdf")
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "PolG spectrum on а heavy chain", ylab = "Frequencies")
dev.off()
pdf("../pictures/PolG_spectrum_on_а_heavy_chain.pdf")
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "PolG spectrum on а heavy chain", ylab = "Frequencies")
dev.off()
pdf("../pictures/SupplFigXX.pdf")
ggbarplot(aggsum, x = "HeavySubType", y = "NormFreq", fill = "HeavySubType", color = "HeavySubType",
palette = c("#c4c4c4", "#c4c4c4", "#d10000","#d10000", "#c4c4c4", "#c4c4c4", "#c4c4c4"), xlab = "PolG spectrum on а heavy chain", ylab = "Frequencies")
dev.off()
